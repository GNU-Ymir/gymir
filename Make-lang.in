

GYC_INSTALL_NAME := $(shell echo gyc|sed '$(program_transform_name)')
GYC_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gyc|sed '$(program_transform_name)')

ROOT_DIR:=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))


ymir: ymir1$(exeext)
 
.PHONY: ymir

GYC_INCLUDES = -I$(srcdir)/../include -I$(srcdir)/ -I$(srcdir)/gcc -I../gcc -I$(srcdir)/../libcpp/include

CFLAGS-ymir/gycspec.o += $(DRIVER_DEFINES)

# Driver
GYC_OBJS = $(GCC_OBJS) ymir/gycspec.o
 
gyc$(exeext): $(GYC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GYC_INCLUDES) -o $@ \
	  $(GYC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
	  $(EXTRA_GCC_LIBS) $(LIBS)


WARN_YFLAGS = -Wall -Wdeprecated $(NOCOMMON_FLAG)
ALL_YFLAGS = $(PICFLAG) $(ALIASING_FLAGS) $(COVERAGE_FLAGS) $(WARN_YFLAGS) -O3


YCOMPILE.base = $(CXX) $(NO_PIE_CFLAGS) -c $(ALL_YFLAGS) $(INCLUDES) -o $@ -std=c++17
YCOMPILE = $(YCOMPILE.base) -MT $@ -MMD -MP -MF $(@D)/$(DEPDIR)/$(*F).TPo
YPOSTCOMPILE = @mv $(@D)/$(DEPDIR)/$(*F).TPo $(@D)/$(DEPDIR)/$(*F).Po
YLINKER = $(CXX) $(NO_PIE_CFLAG) -lstdc++ -lgymidgard -ldwarf

GYMIRCOMPILE.base = /usr/bin/gyc $(NO_PIE_CFLAGS) -c $(INCLUDES) -o $@
GYMIRCOMPILE = $(GYMIRCOMPILE.base) -MT $@ -MMD -MP -MF $(@D)/$(DEPDIR)/$(*F).TPo

# The compiler proper
 
ymir_OBJS = \
    ymir/binding_parser.o \
	ymir/ymir1.o \
    ymir/generator_visitor.o \
    ymir/tree_c_tree.o \
    ymir/tree_stmtlist.o \
    ymir/tree_c_bind.o \
    ymir/tree_chain.o \
    ymir/tree_types.o \
    ymir/tree_decl.o \
    ymir/tree_expr.o \
    ymir/libymirc.a \
	$(END)	

bootstrap_objs := $(shell find $(ROOT_DIR)/$(srcdir)/ymir/bootstrap/src | grep [.]yr)

ymir1$(exeext): attribs.o $(ymir_OBJS) $(BACKEND) $(LIBDEPS)
	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
	attribs.o $(ymir_OBJS) $(D_TARGET_OBJS) $(BACKEND) $(LIBS) $(BACKENDLIBS) libbackend.a -lgymidgard -lgc -ldwarf

ymir/binding_%.o: ymir/binding/%.yr
	  $(GYMIRCOMPILE) $(GYC_INCLUDES) -I$(ROOT_DIR)/$(srcdir)/ymir/bootstrap/src -I$(ROOT_DIR)/$(srcdir)/ymir/ $<
	  $(YPOSTCOMPILE)

ymir/generator_%.o: ymir/binding/generator/%.yr
	  $(GYMIRCOMPILE) $(GYC_INCLUDES) -I$(ROOT_DIR)/$(srcdir)/ymir/bootstrap/src -I$(ROOT_DIR)/$(srcdir)/ymir/ $<
	  $(YPOSTCOMPILE)

ymir/tree_%.o: ymir/binding/tree/%.yr
	  $(GYMIRCOMPILE) $(GYC_INCLUDES) -I$(ROOT_DIR)/$(srcdir)/ymir/bootstrap/src -I$(ROOT_DIR)/$(srcdir)/ymir/ $<
	  $(YPOSTCOMPILE)

ymir/tree_%.o: ymir/binding/tree/%.cc
	  $(YCOMPILE) $(GYC_INCLUDES) $<
	  $(YPOSTCOMPILE)

ymir/libymirc.a: $(bootstrap_objs)
	  cd $(srcdir)/ymir/bootstrap/ ; gyllir build ; cd - ; \
	  cp $(srcdir)/ymir/bootstrap/__libs/libymirc.a $@

ymir.all.cross: 
 
ymir.start.encap: gyc$(exeext)
ymir.rest.encap:

selftest-ymir:

ymir.install-common: installdirs
	-rm -f $(DESTDIR)$(bindir)/$(GYC_INSTALL_NAME)$(exeext)
	$(INSTALL_PROGRAM) gyc$(exeext) $(DESTDIR)$(bindir)/$(GYC_INSTALL_NAME)$(exeext)
	rm -f $(DESTDIR)$(bindir)/$(GYC_TARGET_INSTALL_NAME)$(exeext); \
	( cd $(DESTDIR)$(bindir) && \
      $(LN) $(GYC_INSTALL_NAME)$(exeext) $(GYC_TARGET_INSTALL_NAME)$(exeext) ); \
 
# Required goals, they still do nothing
ymir.install-man:
ymir.install-info:
ymir.install-pdf:
ymir.install-plugin:
ymir.install-html:
ymir.info:
ymir.dvi:
ymir.pdf:
ymir.html:
ymir.man:
ymir.mostlyclean:
ymir.clean:
ymir.distclean:
ymir.maintainer-clean:


# make uninstall
ymir.uninstall:
	-rm -f gyc$(exeext) ymir1$(exeext)
	-rm -f $(ymir_OBJS)
 
# Used for handling bootstrap
ymir.stage1: stage1-start
	-mv ymir/*$(objext) stage1/ymir
ymir.stage2: stage2-start
	-mv ymir/*$(objext) stage2/ymir
ymir.stage3: stage3-start
	-mv ymir/*$(objext) stage3/ymir
ymir.stage4: stage4-start
	-mv ymir/*$(objext) stage4/ymir
ymir.stageprofile: stageprofile-start
	-mv ymir/*$(objext) stageprofile/ymir
ymir.stagefeedback: stagefeedback-start
	-mv ymir/*$(objext) stagefeedback/ymir

check-ymir: check-gyc
lang_checks += check-gyc
lang_checks_parallelized += check-gyc
check_gyc_parallelize = 10
