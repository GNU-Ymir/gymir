mod binding::tree::decl;

import ymirc::lexing::word;
import binding::tree::c_tree;
import std::conv;

/**
 * @params:
 *     - loc: the location of the declaration
 *     - name: the name of the variable to declare
 *     - type: the type of the variable to declare
 * @returns: the tree of the variable declaration
 */
pub def varDeclTree (loc : &Word, name : [c8], type : tree_t)-> tree_t {
    return c_binding_build_var_decl (wordToLocation (loc), name.toStringZ (), type);
}

/**
 * @params:
 *     - loc: the location of the declaration
 *     - name: the name of the parameter to declare
 *     - type: the type of the parameter to declare
 * @returns: the tree of a parameter decl
 */
pub def paramDeclTree (loc : &Word, name : [c8], type : tree_t)-> tree_t {
    return c_binding_build_param_decl (wordToLocation (loc), name.toStringZ (), type);
}

/**
 * @returns: a function decl tree
 * @params:
 *    - loc: the location of the declaration
 *    - name: the name of the function
 */
pub def functionDeclTree (loc : &Word, name : [c8])-> tree_t {
    return c_binding_build_function_decl (wordToLocation (loc), name.toStringZ ());
}
